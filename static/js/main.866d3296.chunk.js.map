{"version":3,"sources":["components/NavBar.tsx","components/Emoji.tsx","components/Card.tsx","components/SkillCards.tsx","components/Project.tsx","components/ProjectsSection.tsx","components/MyMarkdown.tsx","rawLoader.ts","components/Sections.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Container","styled","div","NavBar","className","href","Emoji","label","symbol","role","aria-label","aria-hidden","Card","children","title","ref","useRef","useEffect","VanillaTilt","init","current","SkillCards","props","color","Project","project","useState","toggleLightbox","setToggleLightbox","onImgClick","useCallback","src","v","toggler","sources","Array","filesNumber","keys","map","i","fileId","backColor","naturalSlideWidth","naturalSlideHeight","totalSlides","orientation","dragEnabled","index","alt","style","alignSelf","uncenteredFilesId","includes","onClick","subTitle","tags","t","desc","items","links","ProjectsSection","useTrail","length","position","opacity","top","trail","set","useInView","inView","springLoaded","setSpringLoaded","from","reset","H1","span","H1Element","P","p","PElement","A","a","AElement","Strong","strong","StrongElement","LI","li","LIElement","MyMarkdown","markdown","options","overrides","component","h1","portfolio","ComingSoon","AboutEN","SkillsEN","ProjectsEN","Section","sections","Sections","id","rawLoader","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.866d3296.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  display: none;\n\n  .page-layout {\n    display: flex;\n    justify-content: flex-end;\n\n    ul {\n      display: flex;\n    }\n\n    li {\n      list-style: none;\n      margin: 1em;\n    }\n\n    a {\n      color: inherit;\n      text-decoration: none;\n      font-weight: 400;\n\n      span {\n        font-weight: 600;\n        color: #2179f2;\n      }\n    }\n  }\n`;\n\nconst NavBar: React.FC = () => {\n  return (\n    <Container>\n      <div className=\"page-layout\">\n        <nav>\n          <ul>\n            <li><a href=\"#\">\n              <span>01.</span> About Me</a></li>\n            <li><a href=\"#\">\n              <span>02.</span> Projects</a></li>\n            <li><a href=\"#\">\n              <span>03.</span> Skills</a></li>\n            <li><a href=\"#\">\n              <span>04.</span> Blog</a></li>\n          </ul>\n        </nav>\n      </div>\n    </Container>\n  );\n};\n\nexport { NavBar };","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface EmojiProps {\n  label?: string;\n  symbol: string;\n}\nconst Emoji: React.FC<EmojiProps> = ({ label, symbol}) => {\n  return (\n    <span\n        className=\"emoji\"\n        role=\"img\"\n        aria-label={label || \"\"}\n        aria-hidden={label ? \"false\" : \"true\"}\n    >\n        {symbol}\n    </span>\n  );\n};\n\nexport { Emoji };","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport VanillaTilt from 'vanilla-tilt';\n\nconst Container = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n  justify-content: center;\n\n  .header {\n    color: #171c28;\n    font-size: 1.5em;\n    padding-left: 2rem;\n    padding-right: 2rem;\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    border-bottom-style: solid;\n    border-bottom-width: 1px;\n    border-color: rgba(0,0,0,.05);\n    font-weight: 500;\n  }\n\n  .inner {\n    display: inline-block;\n    box-shadow: 0 8px 12px rgba(60, 90, 120, 0.1);\n    background: rgb(251,252,253);\n    white-space: pre;\n    padding: 2em;\n    padding-top: 0;\n    border-radius: 4px;\n    text-align: center;\n    line-height: 1.7em;\n    letter-spacing: 4px;\n    color: #121314;\n    font-weight: 300;\n  }\n`;\n\nexport interface CardProps {\n  className?: string;\n  title?: string;\n}\n\nconst Card: React.FC<CardProps> = ({ children, className, title }) => {\n  const ref = useRef();\n  useEffect(() => {\n    VanillaTilt.init(ref.current as any,{});\n  }, []);\n\n  return (\n    <Container ref={ref as any} className={className}>\n      <div className=\"inner\">\n        {title && (\n          <>\n            <div className=\"header\">\n              {title}\n            </div>\n            <br/>\n          </>\n        )}\n        {children}\n      </div>\n    </Container>\n  );\n};\n\nexport { Card };","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Card } from \"./Card\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: -50px;\n  transform: translateY(100px);\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin-top: 0;\n    transform: none;\n  }\n\n  > :first-child {\n  }\n\n  > :nth-child(n) {\n    margin: 1em 2em 1em 2em;\n  }\n\n  .stack .inner {\n    text-align: left;\n  }\n\n  .skill-item {\n    white-space: normal;\n  }\n`;\n\nconst SkillCards: React.FC = () => {\n  return (\n    <Container>\n      <Card title=\"Full-Stack Web Dev.\">\n        <div className=\"skill-item\">ReactJS</div>\n        <div className=\"skill-item\">VueJS, Angular2+</div>\n        <div className=\"skill-item\">NodeJS, NestJS</div>\n        <div className=\"skill-item\">ASP.Net, JEE</div>\n      </Card>\n      <Card title=\"Mobile Dev.\">\n        <div className=\"skill-item\">Ionic</div>\n        <div className=\"skill-item\">ReactNative</div>\n      </Card>\n      {/* <Card className=\"stack\" title=\"Preferred Stack\">\n        <div className=\"skill-item\">\n          <span className=\"highlighted\">01. </span>Gatsby + NestJS\n        </div>\n        <div className=\"skill-item\">\n          <span className=\"highlighted\">02. </span>Nuxt SSR + NestJS\n        </div>\n        <div className=\"skill-item\">\n          <span className=\"highlighted\">03. </span>Angular + ASP.Net\n        </div>\n        <div className=\"skill-item\">\n          <span className=\"highlighted\">04. </span>TypeORM + MySQL\n        </div>\n        <div className=\"skill-item\">\n          <span className=\"highlighted\">05. </span>Figma\n        </div>\n      </Card> */}\n    </Container>\n  );\n};\n\nexport { SkillCards };\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { CarouselProvider, Slider, Slide, DotGroup } from \"pure-react-carousel\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nimport { ImageModal } from \"./ImageModal\";\n//@ts-ignore\nimport FsLightbox from \"fslightbox-react\";\n\nconst Container = styled.div`\n  display: flex;\n  margin: 2em;\n  flex-wrap: wrap-reverse;\n\n  @media (max-width: 1000px) {\n    justify-content: center;\n  }\n\n  .slider {\n    width: 600px;\n    max-height: 400px;\n    margin: 0px auto;\n    background: #eee;\n    border-radius: 5px;\n    cursor: zoom-in;\n\n    img {\n      border-radius: 5px;\n      width: 600px;\n      @media (min-width: 320px) and (max-width: 480px) {\n        width: inherit;\n      }\n    }\n\n    .carousel {\n      position: relative;\n    }\n\n    .carousel__dot-group {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      display: flex;\n      justify-content: center;\n      padding-top: 0.5em;\n      padding-bottom: 0.5em;\n      background: #4444445c;\n      z-index: 1;\n\n      button {\n        z-index: 2;\n        margin-left: 0.5em;\n        margin-right: 0.5em;\n        -webkit-appearance: none;\n        width: 12px;\n        height: 12px;\n        background: #f5f5f5;\n        border-radius: 50%;\n        border: none;\n      }\n\n      .carousel__dot--selected {\n        background: #2179f2;\n      }\n    }\n  }\n\n  div[class*=\"slideInner\"] {\n    display: flex;\n    align-items: flex-start;\n    background-color: ${props => props.color || \"inherit\"};\n  }\n\n  .content {\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n\n    @media (max-width: 1000px) {\n      width: 100%;\n    }\n  }\n\n  .subtitle {\n    /* color: rgba(0,0,0,.3); */\n    font-size: 0.8em;\n    opacity: 0.7;\n  }\n\n  .title {\n    font-size: 2.25em;\n    max-width: 8em;\n\n    @media (max-width: 1000px) {\n      max-width: 60%;\n    }\n    @media (min-width: 320px) and (max-width: 480px) {\n      max-width: 100%;\n    }\n  }\n\n  hr {\n    height: 3px;\n    width: 50px;\n    border: 0;\n    background-color: #2179f2;\n    margin: 0;\n    margin-bottom: 1em;\n  }\n\n  .tags {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .tag-item {\n    background: #2179f2;\n    color: white;\n    font-weight: 600;\n    padding: 0.25em;\n    padding-left: 0.25em;\n    padding-right: 0.25em;\n    border-radius: 4px;\n    margin-right: 1em;\n    font-weight: 300;\n    white-space: pre;\n    margin-bottom: 0.5em;\n  }\n\n  .desc {\n    font-weight: 300;\n    line-height: 1.4;\n    font-size: 1.5em;\n    max-width: 25em;\n  }\n`;\n\nexport interface ProjectItem {\n  title: string;\n  subTitle: string;\n  tags: string[];\n  desc: string;\n  fileId: string;\n  filesNumber: number;\n  links: [string, string][];\n  backColor: string;\n  uncenteredFilesId: number[];\n}\n\nconst Project: React.FC<{ project: ProjectItem }> = ({ project }) => {\n  const [toggleLightbox, setToggleLightbox] = useState(false);\n\n  const onImgClick = useCallback((src: string) => {\n    setToggleLightbox(v => !v);\n  }, []);\n\n  return (\n    <>\n      <FsLightbox\n        toggler={toggleLightbox}\n        sources={[...Array(project.filesNumber).keys()].map(\n          i => `project-images/${project.fileId}/${i}.png`\n        )}\n      />\n      <Container color={project.backColor}>\n        <div className=\"slider\">\n          <CarouselProvider\n            naturalSlideWidth={600}\n            naturalSlideHeight={400}\n            totalSlides={project.filesNumber}\n            orientation=\"horizontal\"\n            dragEnabled={false}\n          >\n            {\n              <Slider>\n                {[...Array(project.filesNumber).keys()].map(i => (\n                  <Slide index={i}>\n                    <img\n                      src={`project-images/${project.fileId}/${i}.png`}\n                      alt=\"\"\n                      style={{\n                        alignSelf: project.uncenteredFilesId.includes(i)\n                          ? \"none\"\n                          : \"center\"\n                      }}\n                      onClick={() =>\n                        onImgClick(`project-images/${project.fileId}/${i}.png`)\n                      }\n                    />\n                  </Slide>\n                ))}\n              </Slider>\n            }\n            <DotGroup />\n          </CarouselProvider>\n        </div>\n        <div className=\"content\">\n          <span className=\"subtitle\">{project.subTitle}</span>\n          <span className=\"title\">{project.title}</span>\n          <hr />\n          <div className=\"tags\">\n            {project.tags.map(t => (\n              <span className=\"tag-item\">{t}</span>\n            ))}\n          </div>\n          <p className=\"desc\">{project.desc}</p>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport { Project };\n","import React, { CSSProperties, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ProjectItem, Project } from \"./Project\";\nimport { useTrail, animated } from \"react-spring\";\nimport { useInView } from \"react-intersection-observer\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 2em;\n`;\n\nconst items: ProjectItem[] = [\n  {\n    title: \"IDE 4.0\",\n    subTitle: \"Personal Work, 2019\",\n    desc: `A real-time web app for sharing and collaborate on codebases. In the long run, the app is intended to be \n    used in school settings, and allow teachers to easily follow their students,\n    give assignments and work on the same code as them.`,\n    tags: [\"In Progress\", \"Web App\", \"React\", \"Node Backend\"],\n    links: [],\n    fileId: \"collab\",\n    filesNumber: 2,\n    backColor: \"#CA4C43\",\n    uncenteredFilesId: []\n  },\n  {\n    title: \"Printech Website And Admin Panel.\",\n    subTitle: \"Freelance Work, 2019\",\n    desc: `A website for a web agency with an admin panel for managing the site.`,\n    tags: [\"Gatsby\", \"Node Backend\"],\n    links: [],\n    fileId: \"printech\",\n    filesNumber: 5,\n    backColor: \"#4A90E2\",\n    uncenteredFilesId: [0, 1, 2]\n  },\n  {\n    title: \"Fleet Management App Mockups.\",\n    subTitle: \"Freelance Work, 2019\",\n    desc: `The client dropped the project halfway, here are the mockups I designed with Figma.`,\n    tags: [\"UI/UX Design\", \"Figma\"],\n    links: [],\n    fileId: \"fleet\",\n    filesNumber: 2,\n    backColor: \"#F8EA45\",\n    uncenteredFilesId: [0, 1]\n  },\n  {\n    title: \"Internships Management App for Schools.\",\n    subTitle: \"Assignment Work, 2019\",\n    desc: `A real-time app where students, supervisors and tutors can collaborate and manage internships.`,\n    tags: [\"Angular\", \"Socket.io\", \"Node Backend\"],\n    links: [],\n    fileId: \"internships_app\",\n    filesNumber: 6,\n    backColor: \"#009688\",\n    uncenteredFilesId: []\n  },\n  {\n    title: \"CRM App\",\n    subTitle: \"Freelance Work, 2018\",\n    desc: `A wep app for a business to handle their customers and follow them closely throughout\n    the different services the business offers.`,\n    tags: [\"VueJS\", \"Node Backend\"],\n    links: [],\n    fileId: \"crm_glanv\",\n    filesNumber: 4,\n    backColor: \"#4A90E2\",\n    uncenteredFilesId: []\n  }\n];\n\nconst ProjectsSection: React.FC = () => {\n  const [trail, set] = useTrail(\n    items.length,\n    () =>\n      ({\n        position: \"relative\",\n        opacity: 0,\n        top: 0\n      } as any)\n  );\n  const [ref, inView] = useInView();\n  const [springLoaded, setSpringLoaded] = useState(false);\n  useEffect(() => {\n    if (inView && !springLoaded) {\n      setSpringLoaded(true);\n      set({\n        position: \"relative\",\n        from: { opacity: 0, top: -100 },\n        opacity: 1,\n        top: 0,\n        reset: true\n      });\n    }\n  }, [inView]);\n\n  return (\n    <Container ref={ref}>\n      {trail.map((style, i) => (\n        <animated.div style={style}>\n          <Project project={items[i]} />\n        </animated.div>\n      ))}\n    </Container>\n  );\n};\n\nexport { ProjectsSection };\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Markdown from \"markdown-to-jsx\";\nimport { Emoji } from \"./Emoji\";\nimport { Card } from \"./Card\";\nimport { SkillCards } from \"./SkillCards\";\nimport { ProjectsSection } from \"./ProjectsSection\";\n\nconst H1 = styled.span`\n  font-size: 3.5em;\n  /* font-weight: 700;\n  background: linear-gradient(180deg,rgba(255,255,255,0) 50%, #2179f2 50%); */\n\n  position: relative;\n  color: #2179f2;\n  @media (min-width: 320px) and (max-width: 480px) {\n    font-size: 2em;\n  }\n\n  :after {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    top: 60%;\n    left: -0.1em;\n    right: -0.1em;\n    bottom: 0;\n    transition: top 200ms cubic-bezier(0, 0.8, 0.13, 1);\n    background-color: #2179f250;\n  }\n`;\nconst H1Element: React.FC = ({ children, ...props }) => (\n  <H1 {...props}>{children}</H1>\n);\n\nconst P = styled.p`\n  font-weight: 300;\n  line-height: 1.4;\n  font-size: 1.5em;\n  max-width: 40em;\n`;\nconst PElement: React.FC = ({ children, ...props }) => (\n  <P {...props}>{children}</P>\n);\n\nconst A = styled.a`\n  color: inherit;\n  position: relative;\n  text-decoration: none;\n  font-weight: 500;\n  white-space: pre;\n\n  :after {\n    display: none;\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    top: 60%;\n    left: -0.1em;\n    right: -0.1em;\n    bottom: 0;\n    transition: top 200ms cubic-bezier(0, 0.8, 0.13, 1);\n    background-color: #2179f250;\n  }\n\n  &:hover {\n    :after {\n      top: 0%;\n    }\n  }\n`;\nconst AElement: React.FC = ({ children, ...props }) => (\n  <A {...props}>{children}</A>\n);\n\nconst Strong = styled.strong`\n  position: relative;\n  /* color: #2179f2; */\n  font-weight: 500;\n  white-space: pre;\n\n  :after {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    top: 60%;\n    left: -0.1em;\n    right: -0.1em;\n    bottom: 0;\n    transition: top 200ms cubic-bezier(0, 0.8, 0.13, 1);\n    background-color: #2179f250;\n  }\n`;\nconst StrongElement: React.FC = ({ children, ...props }) => (\n  <Strong {...props}>{children}</Strong>\n);\n\nconst LI = styled.li`\n  font-size: 1.5em;\n`;\nconst LIElement: React.FC = ({ children, ...props }) => (\n  <LI {...props}>{children}</LI>\n);\n\nexport interface MyMarkdownProps {\n  markdown: string;\n}\n\nconst MyMarkdown: React.FC<MyMarkdownProps> = ({ markdown }) => {\n  return (\n    <Markdown\n      options={{\n        overrides: {\n          Emoji: {\n            component: Emoji as any\n          },\n          SkillCards: {\n            component: SkillCards\n          },\n          ProjectsSection: {\n            component: ProjectsSection\n          },\n          h1: {\n            component: H1Element\n          },\n          p: {\n            component: PElement\n          },\n          a: {\n            component: AElement\n          },\n          strong: {\n            component: StrongElement\n          },\n          li: {\n            component: LIElement\n          }\n        }\n      }}\n    >\n      {markdown}\n    </Markdown>\n  );\n};\n\nexport { MyMarkdown };\n","//@ts-ignore\nimport raw from \"raw.macro\";\n\nexport default {\n  portfolio: {\n    ComingSoon: raw('./data/portfolio/ComingSoon.md'),\n    AboutEN: raw('./data/portfolio/About-en.md'),\n    SkillsEN: raw('./data/portfolio/Skills-en.md'),\n    ProjectsEN: raw('./data/portfolio/Projects-en.md'),\n  }\n} as { [section: string]: { [key: string]: string}};","import React from 'react';\nimport styled from 'styled-components';\nimport { Emoji } from './Emoji';\nimport { MyMarkdown } from './MyMarkdown';\nimport rawLoader from '../rawLoader';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin: 1em;\n  }\n`;\n\nconst Section = styled.div`\n  margin-bottom: 4em;\n  position: relative;\n\n  &[class*='section-Projects'] {\n    margin-top: 2em;\n    @media (min-width: 320px) and (max-width: 480px) {\n      padding-top: 3em;\n    }\n  }\n\n  &[class*='section-Skills'] {\n    background-color: #06205d;\n    @media (min-width: 320px) and (max-width: 480px) {\n      margin: -1em;\n      padding: 1em;\n    }\n\n    span,\n    p {\n      color: white;\n\n      .highlighted {\n        color: #2179f2;\n      }\n    }\n\n    :after {\n      /* display: none; */\n      content: '';\n      position: absolute;\n      z-index: -1;\n      bottom: 0%;\n      transform: translateY(50px);\n      /* background-color: #2179f2; */\n      background-image: url(wave5.svg);\n      background-size: 100% 70px;\n      position: absolute;\n      height: 70px;\n      width: 100%;\n      @media (min-width: 320px) and (max-width: 480px) {\n        background-image: none;\n      }\n    }\n\n    :before {\n      /* display: none; */\n      content: '';\n      z-index: -1;\n      background-image: url(wave2.svg);\n      background-size: 100% 70px;\n      position: absolute;\n      height: 70px;\n      width: 100%;\n      top: -70px;\n      @media (min-width: 320px) and (max-width: 480px) {\n        content: none;\n      }\n    }\n  }\n`;\n\nconst sections = ['AboutEN', 'SkillsEN', 'ProjectsEN'];\n// const sections = ['ComingSoon'];\n\nconst Sections: React.FC = () => {\n  return (\n    <Container>\n      {sections.map(id => (\n        <Section className={'section-' + id}>\n          <div className='page-layout'>\n            <MyMarkdown markdown={rawLoader.portfolio[id]} />\n          </div>\n        </Section>\n      ))}\n    </Container>\n  );\n};\n\nexport { Sections };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavBar } from \"./components/NavBar\";\nimport { Sections } from \"./components/Sections\";\nimport 'es5-shim';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  padding-top: 3em;\n  /* max-width: 1250px;\n  margin: auto; */\n`;\n\nconst App: React.FC = () => {\n  return (\n    <Container>\n      <NavBar />\n      <br />\n      <Sections />\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}